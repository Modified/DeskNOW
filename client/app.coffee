## app.coffee
# (Partiall generated by js2coffee 2.1.0.)

# Data for the markers consisting of a name, a LatLng and a zIndex for the
# order in which these markers should display on top of each other.
spaces=[
	['Park view', 32.098176, 34.775998, 3]
	['TLV port', 32.095559, 34.785096, 2]
	['Near train station', 32.085269, 34.793979, 1]
]

# The following example creates complex markers to indicate spaces near
# Sydney, NSW, Australia. Note that the anchor is set to (0,32) to correspond
# to the base of the flagpole.

window.initMap=->
	map=new google.maps.Map document.getElementById('gmap'),zoom:15
	setMarkers map
	navigator.geolocation?.getCurrentPosition (position)->
		initialLocation=new google.maps.LatLng(position.coords.latitude, position.coords.longitude)
		return map.setCenter(initialLocation)
	window.infowindow=new google.maps.InfoWindow(
		content:'<h1>Uluru</h1><div><p><b>Uluru</b>, also referred to as <b>Ayers Rock</b>, is large!</p></div>'
		maxWidth:200
		)

window.setMarkers=(map)->
	# Adds markers to the map.
	# Marker sizes are expressed as a Size of X,Y where the origin of the image
	# (0,0) is located in the top left of the image.
	# Origins, anchor positions and coordinates of the marker increase in the X
	# direction to the right and in the Y direction down.

	#var space, i, image, marker, shape;
	image=
		url: '/i/loc_ico.png'
		size:new google.maps.Size(20, 24)
		origin:new google.maps.Point(0, 0)
		anchor:new google.maps.Point(0, 32)

	shape=
		coords: [1, 1, 1, 20, 18, 20, 18, 1]
		type: 'poly'

	# Shapes define the clickable region of the icon. The type defines an HTML
	# <area> element 'poly' which traces out a polygon as a series of X,Y points.
	# The final coordinate closes the poly by connecting to the first coordinate.
	i = 0
	while i < spaces.length
		s=spaces[i]
		marker=new google.maps.Marker(
			position:
				lat: s[1]
				lng: s[2]
			map: map
			icon: image
			shape: shape
			title: s[0]
			zIndex: s[3]
			)

		marker.addListener 'click',->
			infowindow.content=this.title
			infowindow.open map,this
			map.setCenter this.getPosition()
		i++

$ ->
	dd=new Dragdealer 'map',
		horizontal:no
		vertical:yes
		css3:no
	#dd.setValue 0,200
